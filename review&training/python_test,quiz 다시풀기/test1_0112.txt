String
txt1 = 'A tale that was not right'
# 'ale' 이 출력..
# 'A tale' 출력
# 'not' 출력
# txt1을 소문자 전환
# txt1을 대문자 전환
# 'o'가 몇 개 존재하는가?
# 'o'가 몇 번 인덱스에 존재하는가?
# txt1의 길이는 어떻게 되는가?
# space를 기준으로 나누어서 List에 담으세요..
# 'tale'을 'story'로 바꾸세요..
# txt1 안에 'right'가 존재하는지 확인

List
sol = ['태양','수성','금성','지구','화성','목성','지구']
sol1 = ['토성','천황성','해왕성']
planet = '지구'

# 1. sol에서 ['수성','금성']을 출력
# 2. sol에서 '지구' 위치 인덱스 출력
# 3. sol에서 '화성'을 '해왕성'으로 수정
# 4. '수성'자리에 '명왕성' 삽입
# 5. '토성'을 맨 끝에 삽입
# 6. 맨 끝 요소를 삭제하고 리턴
# 7. '금성'을 제거
# 8. 1번 인덱스에서 3번 인덱스까지 삭제
# 9. 인덱스 2번 요소 삭제
# 10. sol과 sol1을 합치세요
# 11. 내림차순 정렬
# 12. 오름차순 정렬
# 13. '만리장성'이 있는지 확인
# 14. so1을 3번 반복하세요
# 15. 길이를 출력하세요
# 16. '지구'가 몇 개 포함되어있는지 확인.
# 17. 모든 원소를 지우세요.
# 18. sol리스트를 삭제하세요..

Tuple
myTuple = ('tuple', (1,2,3) , [4,5,6,7,8] ,'7', '8', '9')

# 'tuple'을 출력하세요
# 3을 출력하세요
# 4,5를 출력하세요
# [4,5,6]을 출력하세요
# tuple의 길이를 리턴하세요 ( 요소의 갯수가 몇 개인지 )
# '7'이 있는지 확인하세요
# '7'의 인덱스를 출력하세요.
# '7'이 몇 개 있는지 확인하세요
# 인데스 2번를 출력하세요
# 인데스 2번에서 최대값을 출력하세요
# 인데스 2번에서 최소값을 출력하세요
# 인데스 2번에서 총합을 출력하세요
# 인데스 2번에서 평균을 출력하세요
# 인데스 2번를 내림차순 정렬해서 출력하세요.


Set

# 원소가 없는 set인 s를 만드세요
# s에 원소 'sky'와 'earth'를 추가하세요
# s에 1,2 두 원소를 추가하세요
# s에서 'sky'를 삭제하세요

A = {1,2,3,4,5,6}
B = {1,2,3,7,8,9}
C = {1,2,3}
# 두 집합의 합집합을 출력
# 두 집합의 교집합을 출력
# A의 B에 대한 차집합
# 대칭차집합
# C가 A의 부분집합인지 확인
# A가 C를 포함하는지 확인

# 집합 B의 길이를 출력
# 집합 B의 최대값 출력
# 집합 B의 최소값 출력
# 집합 B의 합을 출력
# 집합 B의 평균출력
# 집합 B의 내림차순 출력
# 집합 B에 5가 포함되어 있는지 확인


Dictionary

# 'mydict'라는 딕셔너리를 만드세요.
# 'red':4, 'blue':3, 'green':1 세 요소를 추가하세요.
# key에 'blue'가 있는지 확인하세요.
# mydict의 길이를 출력하세요.
# 'red'의 값을 출력하세요.
# 'red'의 값을 10으로 수정하세요.
# key값만 출력하세요
# value값만 출력하세요
# key와 value를 튜플로 출력하세요.
# (key기준으로 정렬하세요.)
# (value기준으로 정렬하세요)
# key 'blue'요소를 삭제하세요
# key 'pink'요소 값을 출력하되 오류가 없도록 하세요
# key 'pink' 값을 출력하되 없으면, value 20으로 새로이 추가하세요
# value에 20이 있는지 확인하세요.
# key는 'yellow'에 value는 30을 추가하세요.
# yourdict = {'파랑':50, '빨강':70}을 합하세요..